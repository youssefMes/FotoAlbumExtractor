#----------------------------
# Parameter for removing the background
#----------------------------
[BackgroundRemover]
# The size of the searched spot in the background of the images to start the flood fill algorithm.
# The higher the value, the slower the search but up to a certain size it is more stable.
SpotSize = 200

# The threshold around the primary background color, which still should belong to the background to create a
# binary image which is separating the background colors from the rest.
BinaryThreshold = 25

# The size an image must at least have to be considered as an image.
MinImageSize = -100

# The maximum relation between the width and the height of an image to prevent the finding of strips.
MaxRelationImageDimensions = 2.5

# The padding with which image is cut out of the original photo.
ImagePadding = 10

# The necessary amount of features needed to be regarded as image. To check if the found image is legit.
FeatureThreshold = 10

#----------------------------
# Parameter for extracting the image
#----------------------------
[ImageExtraction]
# The maximum size of the window within the program searches a frame around the image.
MaxWindowSize = 0.1

# The number of steps to search for the frame. The maximum window size
# and the number of steps determine the size of the steps fitting to the image size.
Steps = 25

# The ignored steps. This is done to prevent the program of finding the already given image boarder.
Offset = 4


#----------------------------
# Parameter for the face detection
#----------------------------
[FaceDetection]
# path for the Haarcascade files for frontal faces
CascadePathFrontal = ./imextract/cascade/haarcascade_frontalface.xml

# path for the Haarcascade files for profile faces
CascadePathProfile = ./imextract/cascade/haarcascade_profileface.xml

# specifies how much the image size is reduced at each image scale
ScaleFactor = 1.2

# specifies how many neighbors each candidate rectangle should have to retain it
Neighbors = 5
